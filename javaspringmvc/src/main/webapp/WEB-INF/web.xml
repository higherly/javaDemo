<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">
  <welcome-file-list>
    <welcome-file>/index</welcome-file>
  </welcome-file-list>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath*:/applicationContext.xml
    </param-value>
  </context-param>
<!--ContextLoaderListener的作用就是启动Web容器时，自动装配ApplicationContext.xml的配置信息。
因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。
ApplicationContext.xml这个配置文件部一般默认放置在。applicationContext的默认的路径是”/WEB-INF/applicationContext.xml
。也可以在web.xml中配置该文件的其他位置,如
<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath*:/applicationContext.xml
    </param-value>
  </context-param>
-->
  <!-- spring 配置 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- 解决java.beans.Introspector导致的内存泄漏 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <!-- 解决跨域 -->
  <filter>
    <filter-name>cors</filter-name>
    <filter-class>com.zg.manager.filter.HeadersCORSFilter</filter-class><!--你过滤器的包 -->
  </filter>
  <filter-mapping>
    <filter-name>cors</filter-name>
    <url-pattern>/fileUpload/*</url-pattern><!-- 你开放的接口前缀  -->
  </filter-mapping>

  <!-- Character Encoding filter -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!-- SiteMesh <filter> <filter-name>sitemesh</filter-name> <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
      </filter> <filter-mapping> <filter-name>sitemesh</filter-name> <url-pattern>/*</url-pattern>
      </filter-mapping> -->

  <servlet>
    <servlet-name>uedConfig</servlet-name>
    <servlet-class>com.zg.manager.servlet.UedConfigServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>uedConfig</servlet-name>
    <url-pattern>/ued/config</url-pattern>
  </servlet-mapping>
  <!-- Spring MVC -->
  <servlet>
    <servlet-name>springServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:applicationContext-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <!-- 打开Druid SQL监控${ctx}/druid/sql.html
  <filter>
      <filter-name>DruidWebStatFilter</filter-name>
      <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
      <init-param>
          <param-name>exclusions</param-name>
          <param-value>/static/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
      </init-param>
  </filter>
  <filter-mapping>
      <filter-name>DruidWebStatFilter</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping>

  <servlet>
      <servlet-name>DruidStatView</servlet-name>
      <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
  </servlet>
  <servlet-mapping>
      <servlet-name>DruidStatView</servlet-name>
      <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>-->

  <!-- 系统健康检查 -->
  <servlet>
    <servlet-name>healthCheck</servlet-name>
    <servlet-class>com.zg.manager.servlet.HealthCheckServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>healthCheck</servlet-name>
    <url-pattern>/healthCheck/*</url-pattern>
  </servlet-mapping>

</web-app>
